version: "3.8"

services:
  api:
    build: .
    container_name: greenspark-api
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
    # --- COMMAND CORRECTED to be aware of the 'src' layout ---
    command: >
      uvicorn src.app.main:app
      --host 0.0.0.0
      --port 8000
      --reload
      --reload-dir /app/src
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started

  worker:
    build: .
    container_name: greenspark-worker
    env_file: .env
    volumes:
      - ./src:/app/src
    # --- THIS IS THE CORRECTED COMMAND ---
    command: >
      celery -A src.celery_worker worker --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started

  # -----------------------------------

  postgres:
    image: postgres:15-alpine
    container_name: greenspark-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: greenspark-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: greenspark-minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  minio_data:
