"""Initial database schema

Revision ID: f90d0ab0f78c
Revises: 
Create Date: 2025-08-23 19:52:12.872975

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f90d0ab0f78c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appliance_catalog',
    sa.Column('category_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon_emoji', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('typical_wattage', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('label')
    )
    op.create_index(op.f('ix_appliance_catalog_category_id'), 'appliance_catalog', ['category_id'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sa.String(length=25), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('tokens_valid_from_utc', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('bills',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('billing_period_start', sa.Date(), nullable=False),
    sa.Column('billing_period_end', sa.Date(), nullable=False),
    sa.Column('kwh_total', sa.Float(), nullable=False),
    sa.Column('cost_total', sa.Float(), nullable=False),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('normalized_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parse_status', sa.Enum('PROCESSING', 'SUCCESS', 'FAILED', name='billstatus'), nullable=False),
    sa.Column('source_type', sa.Enum('PDF', 'MANUAL', name='billsource'), nullable=False),
    sa.Column('file_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parser_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('checksum', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bills_id'), 'bills', ['id'], unique=False)
    op.create_index(op.f('ix_bills_user_id'), 'bills', ['user_id'], unique=False)
    op.create_table('user_appliances',
    sa.Column('appliance_catalog_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('custom_wattage', sa.Integer(), nullable=True),
    sa.Column('hours_per_day', sa.Float(), nullable=False),
    sa.Column('days_per_week', sa.Integer(), nullable=False),
    sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('star_rating', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('purchase_year', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['appliance_catalog_id'], ['appliance_catalog.category_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_appliances_id'), 'user_appliances', ['id'], unique=False)
    op.create_index(op.f('ix_user_appliances_user_id'), 'user_appliances', ['user_id'], unique=False)
    op.create_table('appliance_estimates',
    sa.Column('estimated_kwh', sa.Float(), nullable=False),
    sa.Column('estimated_cost', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('bill_id', sa.Uuid(), nullable=False),
    sa.Column('user_appliance_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['user_appliance_id'], ['user_appliances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appliance_estimates_bill_id'), 'appliance_estimates', ['bill_id'], unique=False)
    op.create_index(op.f('ix_appliance_estimates_id'), 'appliance_estimates', ['id'], unique=False)
    op.create_index(op.f('ix_appliance_estimates_user_appliance_id'), 'appliance_estimates', ['user_appliance_id'], unique=False)
    op.create_table('insights',
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='insightstatus'), nullable=False),
    sa.Column('structured_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('bill_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insights_bill_id'), 'insights', ['bill_id'], unique=True)
    op.create_index(op.f('ix_insights_id'), 'insights', ['id'], unique=False)
    op.create_index(op.f('ix_insights_user_id'), 'insights', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_insights_user_id'), table_name='insights')
    op.drop_index(op.f('ix_insights_id'), table_name='insights')
    op.drop_index(op.f('ix_insights_bill_id'), table_name='insights')
    op.drop_table('insights')
    op.drop_index(op.f('ix_appliance_estimates_user_appliance_id'), table_name='appliance_estimates')
    op.drop_index(op.f('ix_appliance_estimates_id'), table_name='appliance_estimates')
    op.drop_index(op.f('ix_appliance_estimates_bill_id'), table_name='appliance_estimates')
    op.drop_table('appliance_estimates')
    op.drop_index(op.f('ix_user_appliances_user_id'), table_name='user_appliances')
    op.drop_index(op.f('ix_user_appliances_id'), table_name='user_appliances')
    op.drop_table('user_appliances')
    op.drop_index(op.f('ix_bills_user_id'), table_name='bills')
    op.drop_index(op.f('ix_bills_id'), table_name='bills')
    op.drop_table('bills')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_appliance_catalog_category_id'), table_name='appliance_catalog')
    op.drop_table('appliance_catalog')
    # ### end Alembic commands ###
